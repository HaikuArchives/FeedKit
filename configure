#!/bin/sh
#
# Copyright 2008-2009, Michael Davidson.
# Distributed under the terms of the MIT License.
#
# Authors:
#		Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
#

current_dir=`pwd`

debug=1
have_gcc4=0
defines=""

# Argument parsing
while [ $# != 0 ]; do
	flag="$1"
	case "$flag" in
		--disable-debug) debug=0 ;;
		*)
			echo "Usage: $0 [OPTION]..."
			echo -e "\t-h, --help\t\tShow this usage information"
			echo -e "\t--disable-debug\t\tDisable debugging"
			exit 1
		;;
	esac
	shift
done

# Replacement for which to make it work in Zeta
function which_replacement()
{
 	location=`which $1 2>/dev/null`
 
 	if [ -z "$location" ]; then
 		for p in `echo $PATH | awk '$1=$1' RS=: OFS="\n"`; do 
 			if [ -x $p/$1 ]; then 
 				location=$p/$1
 				break
 			fi 
 		done 
 	fi

	echo $location
 	return
}

# Simple test to detect if we have gcc4
function gcc4_test()
{
	cat << EOF | gcc -E -pipe -c - | grep gcc -q
#if defined(__GNUC__)
#	if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 0)
		// Good, we've got gcc4 or better
#	else
		int gcc_less_than_four;
#	endif
#else
	int no_gcc;
#endif
EOF
	if [ $? -eq 0 ]; then
		return 1
	fi

	return 0
}

# Binaries
jambin=`which_replacement jam`
rcbin=`which_replacement rc`
xresbin=`which_replacement xres`
settypebin=`which_replacement settype`
mimesetbin=`which_replacement mimeset`
setversionbin=`which_replacement setversion`
copyattrbin=`which_replacement copyattr`
svgicontool=`which_replacement IconTool`

# Get common directories
common_dir=`finddir B_COMMON_DIRECTORY`
common_bindir=`finddir B_COMMON_BIN_DIRECTORY`
common_incdir="$common_dir/include"
common_libdir=`finddir B_COMMON_LIB_DIRECTORY`
common_serversdir=`finddir B_COMMON_SERVERS_DIRECTORY`
common_addonsdir=`finddir B_COMMON_ADDONS_DIRECTORY`
common_devdir=`finddir B_COMMON_DEVELOP_DIRECTORY`
user_confdir=`finddir B_USER_CONFIG_DIRECTORY`
beos_sysdir=`finddir B_BEOS_SYSTEM_DIRECTORY`
beos_prefsdir=`finddir B_BEOS_PREFERENCES_DIRECTORY`
prefsdir=`finddir B_PREFERENCES_DIRECTORY`
user_prefsdir=`finddir B_USER_CONFIG_DIRECTORY`/be/Preferences
appsdir=`finddir B_APPS_DIRECTORY`

# Check operating system
platform=`uname -s`
release=`uname -r`
echo -n "Checking operating system... "
case "$platform" in
	BeOS)
		case "$release" in
			5.*)
				defines="NETSERVER_BUILD=1"
			;;
			6.*)
				platform="Zeta"
				defines="BONE_BUILD=1"
			;;
			*)
				echo "*** Unsupported $system operating system."
				exit 1
			;;
		esac
	;;
	Haiku)
		defines="HAIKU_TARGET_PLATFORM_HAIKU=1"
	;;
	*)
		echo "*** Unsupported $system operating system."
		exit 1
	;;
esac
echo "$platform R$release"

# Check whether jam exists
echo -n "Checking whether jam exists... "
if [ -z "$jambin" ]; then
	echo "not found"
	echo "*** Feed Kit requires jam, please read our Build.txt file."
	exit 1
else
	echo "found"
fi

# Check for rc
echo -n "Checking for rc... "
if [ -z "$rcbin" ]; then
	echo "not found"
	exit 1
fi
echo $rcbin

# Check for xres
echo -n "Checking for xres..."
if [ -z "$xresbin" ]; then
	echo "not found"
	exit 1
fi
echo $xresbin

# Check for settype
echo -n "Checking for settype..."
if [ -z "$settypebin" ]; then
	echo "not found"
	exit 1
fi
echo $settypebin

# Check for mimeset
echo -n "Checking for mimeset..."
if [ -z "$mimesetbin" ]; then
	echo "not found"
	exit 1
fi
echo $mimesetbin

# Check for setverion
echo -n "Checking for setversion..."
if [ -z "$setversionbin" ]; then
	echo "not found"
	exit 1
fi
echo $setversionbin

# Check for copyattr
echo -n "Checking for copyattr..."
if [ -z "$copyattrbin" ]; then
	echo "not found"
	exit 1
fi
echo $copyattrbin

# Checking if we have gcc4 or not
echo -n "Checking for gcc4..."
gcc4_test
if [ $? -eq 0 ]; then
	have_gcc4=1
	echo "found"
else
	echo "not found"
	have_gcc4=0
fi

# Create the build configuration
cat > $current_dir/BuildConfig << EOF
DEBUG = ${debug} ;
PLATFORM = ${platform} ;
IS_GCC4_PLATFORM = ${have_gcc4} ;

COMMON_BIN_DIRECTORY = ${common_bindir} ;
COMMON_LIB_DIRECTORY = ${common_libdir} ;
COMMON_INCLUDE_DIRECTORY = ${common_incdir} ;
COMMON_SERVERS_DIRECTORY = ${common_serversdir} ;
COMMON_ADDONS_DIRECTORY = ${common_addonsdir} ;
COMMON_DEVELOP_DIRECTORY = ${common_devdir} ;
USER_CONFIG_DIRECTORY = ${user_confdir} ;
BEOS_SYSTEM_DIRECTORY = ${beos_sysdir} ;
BEOS_PREFERENCES_DIRECTORY = ${beos_prefsdir} ;
PREFERENCES_DIRECTORY = ${prefsdir} ;
USER_PREFERENCES_DIRECTORY = ${user_prefsdir} ;
APPS_DIRECTORY = ${appsdir} ;

RC = ${rcbin} ;
XRES = ${xresbin} ;
SETTYPE = ${settypebin} ;
MIMESET = ${mimesetbin} ;
SETVERSION = ${setversionbin} ;
COPYATTR = ${copyattrbin} ;
SVGICONTOOL = ${svgicontool} ;

DEFINES += ${defines} ;
EOF

echo "Configuration done."
